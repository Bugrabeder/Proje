// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proje1.Data;

namespace Proje1.Migrations
{
    [DbContext(typeof(projeDbcontext))]
    partial class projeDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("ordersid")
                        .HasColumnType("int");

                    b.Property<int>("productsid")
                        .HasColumnType("int");

                    b.HasKey("ordersid", "productsid");

                    b.HasIndex("productsid");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Proje1.Models.Country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("info")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Countrys");
                });

            modelBuilder.Entity("Proje1.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int?>("countryid")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("lastName")
                        .HasColumnType("longtext");

                    b.Property<string>("mail")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("orderid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("countryid");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Proje1.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("creatingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Proje1.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("info")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("numberofStock")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int?>("sellerid")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("sellerid");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            dateAdded = new DateTime(2022, 3, 16, 20, 24, 20, 6, DateTimeKind.Local).AddTicks(7665),
                            name = "Lenovo Legion",
                            numberofStock = 100,
                            price = 12000,
                            type = "elektronik"
                        },
                        new
                        {
                            id = 2,
                            dateAdded = new DateTime(2022, 3, 16, 20, 24, 20, 8, DateTimeKind.Local).AddTicks(4198),
                            name = "İphone 13 ",
                            numberofStock = 2200,
                            price = 10000,
                            type = "elektronik"
                        },
                        new
                        {
                            id = 3,
                            dateAdded = new DateTime(2022, 3, 16, 20, 24, 20, 8, DateTimeKind.Local).AddTicks(4294),
                            name = "Samsung 35x Kamera",
                            numberofStock = 500,
                            price = 7000,
                            type = "elektronik"
                        },
                        new
                        {
                            id = 4,
                            dateAdded = new DateTime(2022, 3, 16, 20, 24, 20, 8, DateTimeKind.Local).AddTicks(4312),
                            name = "İphone Şarj aleti",
                            numberofStock = 1000,
                            price = 120,
                            type = "elektronik"
                        });
                });

            modelBuilder.Entity("Proje1.Models.Seller", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("countryid")
                        .HasColumnType("int");

                    b.Property<string>("lastName")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("countryid");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Proje1.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("ordersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje1.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("productsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proje1.Models.Customer", b =>
                {
                    b.HasOne("Proje1.Models.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryid");

                    b.Navigation("country");
                });

            modelBuilder.Entity("Proje1.Models.Order", b =>
                {
                    b.HasOne("Proje1.Models.Customer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Proje1.Models.Product", b =>
                {
                    b.HasOne("Proje1.Models.Seller", "seller")
                        .WithMany("products")
                        .HasForeignKey("sellerid");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("Proje1.Models.Seller", b =>
                {
                    b.HasOne("Proje1.Models.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryid");

                    b.Navigation("country");
                });

            modelBuilder.Entity("Proje1.Models.Customer", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("Proje1.Models.Seller", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
